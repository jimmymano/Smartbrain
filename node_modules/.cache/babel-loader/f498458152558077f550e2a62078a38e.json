{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\Final Project\\\\Smartbrain\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport 'tachyons';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'ec514acc370b4b3caa8fe2e9b1790573'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width); //Number()converts the image.width string to a number value\n\n      const height = Number(image.height); //Number()converts the image.height string to a number value\n\n      console.log(width, height);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response).catch(err => console.log(err)));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Home/Desktop/Final Project/Smartbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","response","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","catch","err","box","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport 'tachyons';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: 'ec514acc370b4b3caa8fe2e9b1790573'\n});\n\nconst particlesOptions = {\n  particles: {number:{\n    value:150,\n    density:{\n      enable:true,\n      value_area:1000\n    }\n  }\n  }\n}\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box:{}\n    }\n  }\n\n  calculateFaceLocation =(data)=>{\n    const clarifaiFace = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width);//Number()converts the image.width string to a number value\n    const height = Number(image.height);//Number()converts the image.height string to a number value\n    console.log(width,height);\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit = () =>{\n  this.setState({imageUrl:this.state.input})\n    app.models\n    .predict(\n    Clarifai.FACE_DETECT_MODEL,\n    this.state.input)\n    .then(response=>this.calculateFaceLocation(response)\n    .catch(err => console.log(err))\n    )\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <Particles className='particles'params={particlesOptions}/>\n      <Navigation/>\n      <Logo/>\n      <Rank/>\n      <ImageLinkForm \n      onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit}/> \n      <FaceRecognition imageUrl={this.state.imageUrl}/>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}